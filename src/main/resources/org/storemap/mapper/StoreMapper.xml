<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.storemap.mapper.StoreMapper">
	<!-- 첨부파일 존재하면 이렇게
	<select id="getList" resultType="org.storemap.domain.StoreVO">
		select * from store
	</select>
	insert 대괄호밑에 + into쿼리문 위에 쓰고 시퀀스수정
		<selectKey keyProperty="store_idx" resultType="int" order="BEFORE">
			select store_seq.nextval from dual
		</selectKey>
	 -->
	<!-- 1.점포 등록  -->
	<insert id="insert" parameterType="org.storemap.domain.StoreVO">
		insert into store (
			store_idx,
			member_idx,
			store_name,
			store_image,
			store_num,
			store_email,
			store_address,
			store_area,
			store_activity_time,
			store_content,
			store_rnum
		)
		values(
	 		store_seq.nextval,
	 		#{member_idx},
	 		#{store_name},
	 		#{store_image},
	 		#{store_num},
	 		#{store_email},
	 		#{store_address},
	 		#{store_area},
	 		#{store_activity_time},
	 		#{store_content},
	 		#{store_rnum}
	 	)
	</insert>
	<!-- 2.점포 관리  -->
	<update id="update" parameterType="org.storemap.domain.StoreVO">
		update store set 
	 	store_name = #{store_name},
	 	store_num = #{store_num},
	 	store_email = #{store_email},
	 	store_address = #{store_address},
	 	store_area = #{store_area},
	 	store_activity_time = #{store_activity_time},
	 	store_content = #{store_content},
	 	store_rnum = #{store_rnum},
	 	store_lat = ${store_lat},
	 	store_lng = ${store_lng}
	 	where store_idx = #{store_idx}
	</update>
	<!-- 3.점포 삭제  -->
	<delete id="delete" parameterType="int">
		delete from store where store_idx = #{store_idx}
	</delete>
	<!-- 4.점포 전체 보기  -->
	<select id="getStoreList" resultType="org.storemap.domain.StoreVO">
		select * from store
	</select>
	<!-- 5.점포 자세히 보기  -->
	<select id="read" parameterType="int" resultType="org.storemap.domain.StoreVO">
		select * from store where store_idx = #{store_idx}
	</select>
	<!-- 6.회원 번호로 점포 정보 가져오기  -->
	<select id="getStore" parameterType="int" resultType="org.storemap.domain.StoreVO">
		select * from store where member_idx = #{member_idx}
	</select>
	<!-- 7.점포 이름 검색 -->
	<select id="getStoreNameList" parameterType="String" resultType="org.storemap.domain.StoreVO">
		select * from store where store_name = #{store_name}
	</select>
	<!-- 8.점포 동적 검색 -->
	<select id="getStoreDynamicList" parameterType="hashmap" resultType="org.storemap.domain.StoreVO">
		select * from store
		<choose>
			<when test="key==1"> where store_idx=#{value} </when>
	 		<when test="key==2"> where store_name=#{value}</when>
	 		<when test="key==3"> where store_area=#{value}</when>
		</choose>
		order by store_idx
	</select>
	<!-- 9. 점포 페이지 전체 보기
	<select id="getListWithPage" resultType="org.storemap.domain.StoreVO">
		<![CDATA[
	 		select *
			from (select store_idx, store_name, store_image, ROWNUM rn
			from (select store_idx, store_name, store_image
			    from store
			    order by store_idx desc)
			where rownum <= #{pageNum} * #{amount})
			where rn > (#{pageNum}-1) * #{amount}
	 	]]>
	</select>
	
	<select id="getTotalRecordCountPage" resultType="int">
		select count(*) from store
	</select>
	-->
	<!-- 10.점포 숨기기 등록 -->
	<update id="hideStore" parameterType="int">
		update store set 
			store_hidden = 1
		where store_idx = #{store_idx}
	</update>
	<!-- 11.점포 숨기기 해제 -->
	<update id="unhideStore" parameterType="int">
		update store set 
			store_hidden = 0
		where store_idx = #{store_idx}
	</update>
	
	<!-- 메인페이지 랜덤 출력 -->
	<select id="getStoreRanList" parameterType="String" resultType="org.storemap.domain.StoreVO">
		<![CDATA[
			SELECT * FROM (
			    SELECT * FROM STORE 
			    WHERE STORE_ADDRESS LIKE '%'||#{store_address}||'%'
			    ORDER BY dbms_random.random
			)
			WHERE ROWNUM <= 10
		]]>
	</select>
	
	<!-- 점포 지역별 리스트 보기  -->
	<select id="getStoreAreaList" parameterType="String" resultType="org.storemap.domain.StoreVO">
		select * from store where store_area = #{store_area}
	</select>
	
</mapper>
